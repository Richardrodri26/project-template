/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as _appRouteImport } from './routes/__app'
import { Route as IndexRouteImport } from './routes/index'
import { Route as LoginIndexRouteImport } from './routes/login/index'
import { Route as _appAppIndexRouteImport } from './routes/__app/app/index'

const _appRoute = _appRouteImport.update({
  id: '/__app',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginIndexRoute = LoginIndexRouteImport.update({
  id: '/login/',
  path: '/login/',
  getParentRoute: () => rootRouteImport,
} as any)
const _appAppIndexRoute = _appAppIndexRouteImport.update({
  id: '/app/',
  path: '/app/',
  getParentRoute: () => _appRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/login': typeof LoginIndexRoute
  '/app': typeof _appAppIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/login': typeof LoginIndexRoute
  '/app': typeof _appAppIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/__app': typeof _appRouteWithChildren
  '/login/': typeof LoginIndexRoute
  '/__app/app/': typeof _appAppIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/login' | '/app'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/login' | '/app'
  id: '__root__' | '/' | '/__app' | '/login/' | '/__app/app/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  _appRoute: typeof _appRouteWithChildren
  LoginIndexRoute: typeof LoginIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/__app': {
      id: '/__app'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof _appRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login/': {
      id: '/login/'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/__app/app/': {
      id: '/__app/app/'
      path: '/app'
      fullPath: '/app'
      preLoaderRoute: typeof _appAppIndexRouteImport
      parentRoute: typeof _appRoute
    }
  }
}

interface _appRouteChildren {
  _appAppIndexRoute: typeof _appAppIndexRoute
}

const _appRouteChildren: _appRouteChildren = {
  _appAppIndexRoute: _appAppIndexRoute,
}

const _appRouteWithChildren = _appRoute._addFileChildren(_appRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  _appRoute: _appRouteWithChildren,
  LoginIndexRoute: LoginIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
